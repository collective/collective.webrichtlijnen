Full installation notes
-----------------------

Prefered method for installing this theme is using buildout. 

Plone 4.0 and up
================

* Add ``collective.webrichtlijnen`` to the list of eggs to install, e.g.::

    [buildout]
    ...
    eggs =
        ...
        collective.webrichtlijnen
      
    [instance]
    recipe = plone.recipe.zope2instance
    ...
    zcml =
        collective.webrichtlijnen
        collective.webrichtlijnen-overrides

* Re-run buildout, e.g. with::

    $ ./bin/buildout

* Start Zope, and in your Plone instance, install `collective.webrichtlijnen`
        
You can skip the ZCML slug for `collective.webrichtlijnen` (but not for
`collective.webrichtlijnen-overrides)` if you are going to explicitly include
the package from another package (your own theme's) `configure.zcml` file::

  <configure
      xmlns="http://namespaces.zope.org/zope"
      xmlns:five="http://namespaces.zope.org/five"
      xmlns:cmf="http://namespaces.zope.org/cmf"
      xmlns:i18n="http://namespaces.zope.org/i18n"
      i18n_domain="my.theme">

    <five:registerPackage package="." initialize=".initialize" />
    <include package="collective.webrichtlijnen" />
    <include package=".browser" />
    <include file="skins.zcml" />
    <include file="profiles.zcml" />
    <i18n:registerTranslations directory="locales" />

  </configure>

Plone 3
=======

Although the theme in this Python egg is for Plone 4, here are the install
instructions for Plone 3.

* Do as above for Plone 4

* Add `Products.PloneTableless` to `eggs` in `[buildout]` section

* Add `Products.PloneTableless` to `zcml` in `[instance]` section
        
* Pin down the correct version if you're using Plone 3*::

    [versions]
    collective.webrichtlijnen = 1.0.2 # only for Plone 3

* Install `Plone Tableless` (ZMI or `prefs_install_products_form`)

Usage with your custom theme
============================

You will probably want to use this product with a custom theme. The recommended
way to do this is to base your theme on `Webrichtlijnen`. That way, the skin
layers will also be available in your theme, without having to register
the skin layer for all themes. Here's an example `skins.xml`::


  <?xml version="1.0"?>

  <object name="portal_skins" allow_any="False" cookie_persistence="False"
     default_skin="My Theme">

   <object name="my_theme_templates"
      meta_type="Filesystem Directory View"
      directory="my.theme:skins/my_theme_templates"/>
   <skin-path name="My Theme" based-on="Webrichtlijnen">
    <layer name="my_theme_templates"
       insert-after="custom"/>
   </skin-path>

  </object>


